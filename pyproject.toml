[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Yahya Abou Imran <alexandre.poitevin.dev@gmail.com>"]
readme = "README.md"


[tool.poe.tasks]

_users = "./manage.py createusers"

    [tool.poe.tasks.db]
    help = "[Re-]Build the database"
    sequence = [
        { shell = "rm db.sqlite3 || true"            },
        { cmd   = "./manage.py migrate --run-syncdb" },
    ]

    [tool.poe.tasks.load]
    help = "Load base data"
    control.expr = "pack"

        [[tool.poe.tasks.load.args]]
        name = "pack"
        positional = true
        help = "The amount of fixtures needed [mini|full] [Default: full]"
        default = "full"

        [[tool.poe.tasks.load.switch]]
        case = ["m", "mini", "minimal"]
        shell = "./manage.py loaddata resources/minifixtures.json"

        [[tool.poe.tasks.load.switch]]
        env = { fixtures = "resources/fixtures.json" }
        shell = "./manage.py loaddata resources/fixtures.json"

    [tool.poe.tasks.run]
    help = "Run the Django server"
    cmd = """
        ./manage.py runserver 0.0.0.0:8000
    """

    [tool.poe.tasks.start]
    help = "Run the Django server with full base data"
    sequence = [
        "db",
        "load",
        "run",
    ]

    [tool.poe.tasks.dev]
    help = "Run the Django server in dev mode with minimal base data"
    sequence = [
        "db",
        "load --pack minimal",
        "run",
    ]

    [tool.poe.tasks.schemas]
    help = "Write the OpenAPI schemas"
    cmd = """
        ./manage.py spectacular --file resources/openapi-schema.yml
    """

    [tool.poe.tasks.tests]
    help = "Run all tests (unit / integration / functional)"
    cmd = """
        pytest tests
    """

    [tool.poe.tasks.cov]
    help = "Compute code coverage from tests"
    ref = """
        tests --cov=apps --cov-report=term-missing --cov-report=html
    """


[tool.poetry.dependencies]
python = "^3.10"
asgiref = "3.6.0"
django = "4.1.6"
django-cors-headers = "3.13.0"
django-filter = "22.1"
django-safedelete = "1.3.1"
django-simple-history = "3.2.0"
django-utils = "0.0.2"
djangorestframework = "3.14.0"
drf-nested-routers = "0.93.4"
markdown = "3.4.1"
pytz = "2022.7.1"
sqlparse = "0.4.3"
nanoid = "^2.0.0"
drf-spectacular = "^0.25.1"
poethepoet = "^0.18.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pytest-django = "^4.5.2"
black = "^23.1.0"
coverage = "^7.1.0"
pytest-cov = "^4.0.0"
faker = "^16.8.1"
pyyaml = "^6.0"
uritemplate = "^4.1.1"
poethepoet = "^0.18.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
